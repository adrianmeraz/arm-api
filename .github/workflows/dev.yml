name: Dev Push
on:
  push:
    branches:
      - dev
    paths:
      - '**.py'
      - '**.yml'
      - 'Dockerfile'
      - 'uv.lock'
      - 'pyproject.toml'

jobs:
  main:
    name: Build Image, Push to ECR, Apply Terraform Plan, Raise PR
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      APP_NAME:              ${{ github.event.repository.name }}
      AWS_ROLE_ARN:          ${{ secrets.AWS_ROLE_ARN }}
      AWS_REGION:            ${{ secrets.AWS_REGION }}
      ENVIRONMENT:           dev
      GH_PAT:                ${{ secrets.GH_PAT }}
    steps:
    - name: Configure AWS credentials OIDC
      uses: aws-actions/configure-aws-credentials@v5.1.0
      with:
        role-to-assume:     ${{ env.AWS_ROLE_ARN }}
        aws-region:         ${{ env.AWS_REGION }}
        output-credentials: true

    - name: Get Secrets
      uses: Bardavon-Health/actions-aws-ssm-params-to-env@v1.4.0
      with:
        decryption: true
        prefix:     PS_
        ssm-path:   /${{ env.APP_NAME }}/${{ env.ENVIRONMENT }}/secrets

    - name: Checkout Code
      uses: actions/checkout@v5
      with:
        fetch-depth: ‘2’

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build image, cache layers, and push to ECR
      env:
        REPOSITORY_URL:  ${{ env.PS_AWS_ECR_REPOSITORY_URL }}
        IMAGE_TAG:       "latest"
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        provenance: false # Required per https://stackoverflow.com/a/75149347
        tags: ${{ env.REPOSITORY_URL }}:${{ env.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Checkout Terraform Repo
      uses: actions/checkout@v5
      with:
        ref: main
        repository: 'adrianmeraz/am-terraform'
        token: ${{ env.GH_PAT }}

    # Caching Terraform plugin and modules per https://github.com/dflook/terraform-github-actions/issues/105
    - name: Load Terraform cache
      id: cache-virtualenv
      uses: actions/cache@v4
      with:
        path: |
          ${{ runner.temp }}/_github_home/.terraform.d/plugin-cache
          ${{ runner.temp }}/_github_home/.dflook-terraform-github-actions
        key: ${{ runner.os }}-tf-${{ hashFiles('**/.terraform.lock.hcl') }}

    - name: Terraform apply
      uses: dflook/terraform-apply@v2
      env:
        GITHUB_TOKEN: ${{ env.GH_PAT }}
      with:
        path:  apps/${{ env.APP_NAME }}/environments/${{ env.ENVIRONMENT }}
        auto_approve: true
        variables: |
          app_name          = "${{ env.APP_NAME }}"
          aws_access_key    = "${{ steps.creds.outputs.aws-access-key-id }}"
          aws_region        = "${{ env.AWS_REGION }}"
          aws_secret_key    = "${{ steps.creds.outputs.aws-secret-access-key }}"
          budget_config     = "${{
            {
              "limit_amount": 20,
              "subscriber_email_addresses": ["${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"]
            } | toJson
          }}"
          environment       = "${{ env.ENVIRONMENT }}"
          github_org        = "${{ github.repository_owner }}"
          github_repository = "${{ env.APP_NAME }}"
          shared_app_name   = "${{ env.PS_SHARED_APP_NAME }}"

    - name: Checkout Main Branch
      uses: actions/checkout@v5
      with:
        ref: main

    - name: Reset main branch
      run: |
        git fetch origin dev:dev
        git reset --hard dev

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ env.GH_PAT }}
        branch: main-promotion
        delete-branch: true
        title: Promote dev to main branch
